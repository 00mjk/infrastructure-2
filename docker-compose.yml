version: '3.7'
services:
  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    restart: always
    ports:
      - 9001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      TZ: Europe/Berlin
      WATCHTOWER_SCHEDULE: '0 0 0 * * *'
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_TO: ${WATCHTOWER_EMAIL_TO}
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${WATCHTOWER_EMAIL_FROM}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${WATCHTOWER_EMAIL_SERVER}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: ${WATCHTOWER_EMAIL_SERVER_PORT:-587}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${WATCHTOWER_EMAIL_FROM}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${WATCHTOWER_EMAIL_PASSWORD}
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: 2
      WATCHTOWER_DEBUG: '${WATCHTOWER_DEBUG:-false}'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    restart: on-failure
    command: -H unix:///var/run/docker.sock --no-analytics --ssl --sslcert /data/fullchain.pem --sslkey /data/privkey.pem
    ports:
      - '9000:9000'
      - '8000:8000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    networks:
      default:
        ipv4_address: 172.20.0.2
  unifi:
    image: ryansch/unifi-rpi:latest
    container_name: unifi
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./unifi/config:/var/lib/unifi
      - ./unifi/log:/usr/lib/unifi/logs
      - ./unifi/log2:/var/log/unifi
      - ./unifi/run:/usr/lib/unifi/run
      - ./unifi/run2:/run/unifi
      - ./unifi/work:/usr/lib/unifi/work
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    depends_on:
      - cloudflared
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
      - '80:80/tcp'
      - '443:443/tcp'
    environment:
      TZ: Europe/Berlin
      DNS1: 172.20.0.4#5053
      DNS2: 'no'
      VIRTUAL_PORT: 80
      WEBPASSWORD: ${PI_HOLE_PASSWORD}
      CONDITIONAL_FORWARDING: 'true'
      CONDITIONAL_FORWARDING_IP: ${ROUTER_IP}
      CONDITIONAL_FORWARDING_DOMAIN: fritz.box
      PROXY_LOCATION: pihole
    volumes:
      - ./pihole/etc-pihole/:/etc/pihole/
      - ./pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
      - ./pihole/themes/pi-hole-midnight/skin-blue.min.css:/var/www/html/admin/style/vendor/skin-blue.min.css
    dns:
      - 127.0.0.1
      - 1.1.1.1
    networks:
      default:
        ipv4_address: 172.20.0.3
    cap_add:
      - NET_ADMIN
  cloudflared:
    image: crazymax/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    ports:
      - '5053:5053/udp'
      - '49312:49312/tcp'
    environment:
      TZ: Europe/Berlin
      TUNNEL_DNS_UPSTREAM: https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
    networks:
      default:
        ipv4_address: 172.20.0.4
  homeassistant:
    image: homeassistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    depends_on:
      - pihole
    network_mode: host
    environment:
      TZ: Europe/Berlin
    volumes:
      - ./home-assistant:/config
networks:
  default:
    ipam:
      config:
        - subnet: 172.20.0.0/24
